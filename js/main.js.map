{"version":3,"sources":["app/typescripts/views/home/home.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/// <reference path=\"../../../definitions/jquery/jquery.d.ts\" />\n/// <reference path=\"../../../definitions/pixi-typescript/index.d.ts\" />\n\n class Homme {\n\n    private _renderer : PIXI.WebGLRenderer;\n    private _stage    : PIXI.Container;\n    private _graphic  : PIXI.Graphics;\n    private _ticker   : PIXI.ticker.Ticker;\n    private _$container: JQuery;\n\n    private _frequency_1: number;\n    private _direction_1: number;\n    private _width_1: number;\n\n    private _frequency_2: number;\n    private _direction_2: number;\n    private _width_2: number;\n\n    private _canvas_w: number = 325;\n    private _canvas_h: number = 152;\n    \n    constructor() {\n        \n        this._$container = $( '#js-frame' );\n        \n        this._renderer = new PIXI.WebGLRenderer(this._canvas_w + 50, this._canvas_h, {transparent: true} );\n        this._graphic = new PIXI.Graphics();\n        this._stage = new PIXI.Container();\n        this._ticker = new PIXI.ticker.Ticker();\n        \n        this._frequency_1 = 5;\n        this._width_1 = 150;\n        this._direction_1 = 0;\n\n        this._frequency_2 = 5;\n        this._width_2 = 90;\n        this._direction_2 = 0;\n        \n        this._stage.addChild(this._graphic);\n\n        this._$container.prepend(this._renderer.view);\n\n        this._ticker.add( this.animate.bind( this ));\n        this._ticker.start();\n    }\n\n    private animate():void {\n\n        if(this._renderer) {\n            this.draw();\n            this._renderer.render(this._stage);\n        }\n    }\n\n    private draw():any {\n\n        //velocity\n        if(this._direction_1 == 0) {\n            //velociti up\n            this._frequency_1 -= .21;\n            this._width_1 += 1;\n        } else {\n            //velociti down\n            this._frequency_1 += .21;\n            this._width_1 -= 1;\n        }\n        //wave max top\n        if(this._frequency_1 > 3){ this._direction_1 = 0}\n        //wave max bottom\n        if(this._frequency_1 < -3){ this._direction_1 = 1}\n\n\n        if(this._direction_2 == 0) {\n            this._frequency_2 -= .2;\n            this._width_2 += 1;\n        } else {\n            this._frequency_2 += .2;\n            this._width_2 -= 1;\n        }\n        if(this._frequency_2 > 4){ this._direction_2 = 0}\n        if(this._frequency_2 < -4){ this._direction_2 = 1}\n\n\n        this._graphic.clear();\n\n        // waves\n        this._drawWave((this._canvas_h / 2 ), this._frequency_1, this._width_1, 0x5BCEE6);\n        this._drawWave((this._canvas_h / 2) + 15, this._frequency_2, this._width_2, 0x9EEAF9);\n\n        this._graphic.endFill();\n    }\n\n    private _drawWave( posX: number, frequency: number, xp: number, color: number ): void {\n        \n        // waves        \n        this._graphic.beginFill(color);\n        this._graphic.moveTo(0, posX - 20 );\n        for(let x = 0; x <= this._canvas_w + 50; x++){\n\n            const y = frequency * Math.sin((Math.PI/xp) * x) + posX ;\n            this._graphic.lineTo(x, y);\n        }\n        this._graphic.lineTo(this._canvas_w + 50, posX );\n        this._graphic.lineTo(this._canvas_w + 50, this._canvas_h);\n        this._graphic.lineTo(0, this._canvas_h);\n    }\n}\n\nnew Homme();"]}